spring:
  datasource:
    url: jdbc:mysql://${mysql_host:localhost}:${mysql_port:3306}/${mysql_dbname:test}?charset=utf8
    username: ${mysql_username:root}
    password: ${mysql_password:123456}
    driver-class-name: com.mysql.jdbc.Driver

# kafka的配置
  kafka:
    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: consumer1
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# mongo的配置
  data:
    mongodb:
#      uri: mongodb://${mongo_username:root}:${mongo_passwd:123456}@${mongo_host:localhost}:${mongo_port:27017}/${mongo_db:test}?authSource=${auth_db:admin}
      username: ${mongo_username:root}
      password: ${mongo_passwd:123456}
      host: ${mongo_host:localhost}
      port: ${mongo_port:27017}
      database: ${mongo_db:test}
      authentication-database: ${auth_db:admin}

# redis的配置
  redis:
    host: ${redis_host:localhost}
    port: ${redis_port:6379}
    database: ${redis_db:3}
    password: ${redis_password:123456}


# mybatis 配置
mybatis:
  config-location: classpath:mybatis-config.xml

#es 配置
es:
  elasticsearch:
    clusterNodes: ${es_nodes:http://127.0.0.1:9200}



logging:
  level:
    root: info







