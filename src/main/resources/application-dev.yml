spring:
  datasource:
    url: jdbc:mysql://${mysql_host:localhost}:${mysql_port:3306}/${mysql_dbname:faw_sales_dap}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
    username: ${mysql_username:root}
    password: ${mysql_password:123456}
    driver-class-name: com.mysql.jdbc.Driver

# kafka的配置
  kafka:
    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: consumer1
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# mongo单数据源的配置
#  data:
#    mongodb:
##      uri: mongodb://${mongo_username:root}:${mongo_passwd:123456}@${mongo_host:127.0.0.1}:${mongo_port:27001}/${mongo_db:test}?authSource=${auth_db:admin}
#      username: ${mongo_username:rwuser}
#      password: ${mongo_passwd:JF_xsda_2018}
#      host: ${mongo_host:localhost}
#      port: ${mongo_port:8635}
#      database: ${mongo_db:faw-sales}
#      authentication-database: ${auth_db:admin}
  data:
    mongodb:
      admindb:
        uri: mongodb://root:123@172.16.48.58:8635,172.16.48.80:8635/admin?authSource=admin
      reportdb:
        uri: mongodb://root:123@172.16.48.58:8635,172.16.48.80:8635/new_report?authSource=admin

# redis的配置
  redis:
    host: ${redis_host:localhost}
    port: ${redis_port:6379}
    database: ${redis_db:3}
    password: ${redis_password:123456}


# mybatis 配置
mybatis:
  config-location: classpath:mybatis-config.xml

#es 配置
es:
  elasticsearch:
    clusterNodes: ${es_nodes:http://127.0.0.1:9200}

# 线程池配置
pool:
  batchPoolTaskSize: 10
  batchPoolQueueSize: 20

#kafka的一些自定义配置
tpd:
  topicName: test_partition_topics
  numPartitions: 14
  kafkaConsumers:
    testGroupId: consumer3

customize:
  ifShard: false


logging:
  level:
    root: info







